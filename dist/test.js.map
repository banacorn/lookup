{"version":3,"sources":["webpack:///webpack/bootstrap 2a4416b81a431adffd18","webpack:///./src/test/main.ts","webpack:///external \"fs\"","webpack:///external \"util\"","webpack:///external \"colors\"","webpack:///external \"request\"","webpack:///./src/chrome/parser.ts","webpack:///external \"lodash\"","webpack:///external \"xmldom\""],"names":[],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2a4416b81a431adffd18\n **/","import * as fs from 'fs';\nimport { inspect } from 'util';\nimport * as http from 'http';\nimport * as _ from 'lodash';\nimport 'colors';\nvar request = require('request');\nimport { parseXML, parseDocument } from '../chrome/parser';\n// import { parser, parseXML, groupByHeader, truncate } from '../chrome/parser';\nimport { Section } from '../types';\n\nfunction debug(s: any) {\n    const t: string = inspect(s, false, null);\n    console.log(t.cyan)\n}\n\nfunction debugGreen(s: any) {\n    const t: string = inspect(s, false, null);\n    console.log(t.green)\n}\n\nconst word = process.argv[2] || 'Legierung';\n\n\n\nread(word, (body) => {\n    console.log('=================================================='.magenta)\n    console.time('parse')\n    const doc = parseXML(body);\n    console.timeEnd('parse')\n    console.time('build')\n    const section = parseDocument(doc);\n    console.timeEnd('build')\n    // debug(section)\n    // console.log(result.documentElement.childNodes[3].nodeName)\n    // const contentNodeList: NodeList = result.documentElement.childNodes[3].childNodes[5].childNodes[9].childNodes;\n    // console.log(contentNodeList[1])\n    // Array.prototype.slice.call(contentNodeList).forEach((node: Node) => {\n    //     console.log(node.nodeName)\n    // })\n\n    // console.log(DOMParser)\n    // parseXML(body).then((result) => {\n    //     // debugGreen(result)\n    //     // debug('done');\n    //     result = truncate(result);\n    //     console.timeEnd('parse')\n    //     console.time('group')\n    //     groupByHeader(result, 'languages', 2);\n    //     console.timeEnd('group')\n    //     // debug(groupByHeader(result, 'languages', 2));\n    // })\n})\n\n\nfunction get(word: string, callback: (s: string) => void) {\n    console.log(`fetching ${word}`.gray)\n    request(`http://en.wiktionary.org/w/index.php?title=${word}&printable=true`, (error: Error, response: any, body: any) => {\n        if (!error && response.statusCode == 200) {\n            console.log(`${word} fetched`.gray)\n            callback(body);\n            fs.writeFile(`corpse/${word}`, body);\n        } else {\n            console.log(`fetching ${word} failed`.gray, response.statusCode)\n        }\n    })\n}\n\nfunction read(word: string, callback: (s: string) => void) {\n    fs.readFile(`corpse/${word}`, (err, data) => {\n        if (err && err.errno === -2) {\n            console.log(`${word} not found`.gray)\n            get(word, callback);\n        } else {\n            callback(data.toString());\n        }\n    })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/test/main.ts\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"util\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"util\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"colors\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"colors\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"request\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"request\"\n ** module id = 4\n ** module chunks = 0\n **/","import * as _ from 'lodash'\n// import * as Promise from 'bluebird'\n\nimport { DOMParserStatic } from 'xmldom';\nimport { Section } from '../types'\n\nfunction isHeader(s: string, level?: number): boolean {\n    const match = s.match(/^[Hh](\\d)+$/);\n    if (match) {\n        if (level) {\n            return parseInt(match[1]) === level;\n        } else {\n            return true;\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction parseXML(raw: string): Document {\n    if (typeof window === 'undefined') {\n        // in nodejs\n        const DOMParser: DOMParserStatic = require('xmldom').DOMParser;\n        return new DOMParser().parseFromString(raw, 'text/html')\n    } else {\n        // in browser\n        return new DOMParser().parseFromString(raw, 'text/html')\n    }\n}\n\nfunction parseDocument(doc: Document): Section<Node[]> {\n    const contentNode: Node = doc.getElementById('mw-content-text');\n    const nodeList: Node[] = Array.prototype.slice.call(contentNode.childNodes);\n    return buildSection(nodeList, \"Entry\", 2);\n}\n\n// given a NodeList, build a tree with headers as ineteral nodes\nfunction buildSection(list: Node[], name: string, level: number): Section<Node[]> {\n\n    let intervals: number[] = [];\n    list.forEach((node, i) => {\n        if (isHeader(node.nodeName, level))\n            intervals.push(i);\n    });\n    if (intervals.length > 0) {\n        const body = _.take(list, intervals[0]);\n        const subs = intervals.map((start, i) => {\n            const name = list[start].childNodes[0].textContent;\n            let interval: [number, number];\n            if (i === intervals.length - 1) {  // last inteval\n                interval = [start + 1, list.length];\n            } else {\n                interval = [start + 1, intervals[i + 1]];\n            }\n            const segment = list.slice(interval[0], interval[1]);\n            return buildSection(segment, name, level + 1);\n        });\n        return {\n            name: name,\n            body: body,\n            subs: subs\n        }\n\n    } else {\n        // const body = list.map((x) => x.textContent).join(\"\");\n        const body = list;\n        return {\n            name: name,\n            body: body,\n            subs: []\n        }\n    }\n}\n\nexport {\n    parseXML,\n    parseDocument,\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chrome/parser.ts\n **/","module.exports = require(\"lodash\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"xmldom\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmldom\"\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}